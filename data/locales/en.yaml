messages:
  welcome: "üê≥ Welcome to Docsh - Docker Command Mapping Shell"
  command_not_found: "Command not found: %s"
  mapping_found: "Mapping found: %s -> %s"
  executing_command: "Executing command: %s"
  docker_not_available: "Docker is not available. Please ensure Docker daemon is running"
  goodbye: "üëã Thank you for using Docsh"
  error: "Error: %s"
  success: "Success: %s"
  warning: "Warning: %s"

help:
  usage: "Usage"
  examples: "Examples"
  options: "Options"
  description: "Description"
  notes: "Notes"
  warnings: "Warnings"
  
categories:
  list-operations: "List Operations"
  process-management: "Process Management"
  file-operations: "File Operations"
  logs-monitoring: "Logs & Monitoring"
  system-information: "System Information"
  network: "Network"
  container-management: "Container Management"

commands:
  help_title: "üê≥ Docsh Help"
  help_description: "Welcome to Docsh Docker Command Mapping Shell. It converts Linux commands to Docker commands."
  docker_only_help_title: "üê≥ Docsh - Docker-Only Command Shell"
  docker_only_help_description: "A specialized shell for Docker operations with Linux command mappings."
  examples_header: "Examples"
  examples_ls: "  ls          -> docker ps"
  examples_ps: "  ps          -> docker ps"
  examples_kill: "  kill <name> -> docker stop <name>"
  examples_rm: "  rm <name>   -> docker rm <name>"
  examples_tail: "  tail -f <name> -> docker logs -f <name>"
  examples_cd: "  cd <container> -> docker exec -it <container> /bin/bash"
  docker_commands_note: "  docker ps, docker run, docker exec, docker logs, etc."
  lifecycle_header: "üê≥ Docker Lifecycle Commands:"
  lifecycle_pull: "  pull <image>            Pull image from registry"
  lifecycle_start: "  start <container>       Start stopped container"
  lifecycle_stop: "  stop <container>        Stop running container"
  lifecycle_exec: "  exec <container> <cmd>  Execute command in container"
  lifecycle_rm: "  rm [--force] <container> Remove container"
  lifecycle_rmi: "  rmi [--force] <image>   Remove image"
  
  # Mapping commands
  mapping_help: "mapping [list|search|show] <args>  Manage command mappings"
  mapping_list: "mapping list [category]           List mappings by category"
  mapping_search: "mapping search <query>           Search mappings"
  mapping_show: "mapping show <command>            Show specific mapping details"
  
  # Shell commands
  alias_help: "alias <name>=<command>              Set alias"
  unalias_help: "unalias <name>                    Remove alias"
  history_help: "history [search <query>]          Show/search history"
  theme_help: "theme [name]                       Set theme"
  lang_help: "lang [language]                    Set language"
  config_help: "config [show|set]                 Manage configuration"
  
  # Basic commands
  exit_help: "exit                              Exit shell"
  clear_help: "clear                             Clear screen"
  version_help: "version                           Show version info"
  
  # Docker-only specific
  docker_only_mappings_title: "üîÑ Command Mappings (Linux -> Docker):"
  docker_only_docker_commands_title: "üê≥ Docker Commands:"
  docker_only_builtin_commands_title: "üîß Built-in Commands:"
  docker_only_more_info_title: "üîç For more information:"
  docker_only_note_title: "‚ö†Ô∏è  Note:"
  docker_only_note_message: "This is a Docker-only shell. Regular Linux commands\n    are only available if they have Docker mappings."

examples:
  basic_usage: "Basic Usage:"
  linux_to_docker: "Enter Linux commands and they will be automatically converted to Docker commands:"
  mapping_examples: "Mapping Examples:"
  
config:
  not_initialized: "Configuration not initialized"
  parse_error: "Line %d: Configuration parse error: %s"
  unknown_command: "Unknown configuration command: %s"
  usage: "Usage: config [show|set <key> <value>]"
  show_header: "üê≥ Docsh Configuration"
  show_theme: "Theme: %s"
  show_language: "Language: %s"
  show_github_user: "GitHub User: %s"
  show_github_token: "GitHub Token: %s***"
  show_github_token_not_set: "GitHub Token: Not set"
  show_aliases_count: "Aliases count: %d"
  show_aliases_header: "Configured Aliases:"
  show_alias_item: "  %s = %s"
  docker_only_mode_enabled: "üê≥ Docker-Only Shell Mode: ENABLED"
  docker_available: "‚úÖ Docker is available"
  docker_not_available: "‚ùå Docker is not available"
  total_mappings: "Total command mappings: %d"
  available_categories: "Categories: %s"
  linux_commands_disabled: "‚ö†Ô∏è  Regular Linux commands are disabled in Docker-only mode."

alias:
  no_aliases: "No aliases configured"
  defined_aliases: "Configured aliases:"
  alias_format: "  %s = %s"
  alias_added: "Alias added: %s = %s"
  alias_removed: "Alias removed: %s"
  alias_not_found: "Alias not found: %s"

theme:
  available_themes: "Available themes:"
  current_theme: "Current theme: %s"
  theme_changed: "Theme changed to: %s"
  not_found: "Theme not found: %s"

lang:
  current_language: "Current language: %s"
  available_languages: "Available languages:"
  language_changed: "Language changed to: %s"
  restart_notice: "Note: Some changes will take effect after shell restart"
  invalid_language: "Invalid language: %s"
  save_error: "Failed to save language setting: %s"
  init_error: "Failed to initialize language: %s"

 

windows:
  cat_error: "File read error (%s): %s"
  files_copied: "Files copied"
  files_moved: "Files moved"
  rm_error: "File deletion error (%s): %s"
  files_deleted: "%d files deleted"

shell:
  config_load_warning: "Configuration file load warning: %s"
  runtime_separator: "=================================="
  runtime_info: "üê≥ Docsh Runtime Information"
  runtime_os: "OS: %s"
  runtime_arch: "Architecture: %s"

app:
  title: "üê≥ Docsh - Docker Command Mapping Shell"
  description: "A convenient shell that converts Linux commands to Docker commands"
  exit_instruction: "Type 'exit' to quit"
  welcome: "üê≥ Welcome to Docsh! Docker Command Mapping Shell.\nType 'help' for help, 'exit' to quit.\n"
  goodbye: "üëã Thank you for using Docsh!"
  error: "‚ùå Error: %s"
  docker_only_welcome: "üê≥ Welcome to Docsh! Docker-Only Command Shell.\nType 'help' for available commands, 'exit' to quit.\n"
  docker_only_mode: "Docker-Only Mode"
  docker_only_error: "Command '%s' is not supported in Docker-only mode. Use 'mapping search %s' to find available Docker commands."
  docker_only_available_commands: "üê≥ This is a Docker-only shell. Available commands:"
  docker_only_commands_list: "   - Docker commands: docker ps, docker run, docker exec, etc.\n   - Mapped commands: ls, ps, kill, rm, tail, cp, etc.\n   - Built-in commands: help, mapping, alias, theme, config, exit"
  docker_only_mapping_help: "   Use 'mapping list' to see all available command mappings."
  docker_only_version: "üê≥ Docsh version 1.0.0 (Docker-Only Mode)"
  executing: "üöÄ Executing: %s"
  mapping_applied: "‚úÖ %s -> %s"
  stream_stop_tip: "üí° Press Ctrl+C to stop, or type 'exit' + Enter"
  command_stopped_signal: "‚úÖ Command stopped by signal"
  command_stopped: "‚úÖ Command stopped"
  command_force_killed: "üíÄ Command force killed"
  command_stopped_manual: "üõë Command stopped"
  command_completed: "üèÅ Command completed"
  command_failed_reason: "‚ùå Command failed: %s"
  command_timed_out: "‚è∞ Command timed out"
  command_stopped_alert: "üö® Command stopped"
  command_auto_terminated: "üö® Command auto-terminated"
  command_exited: "üîç Command exited"

mappings:
  not_found: "Mapping not found: %s"
  category_not_found: "Category not found: %s"
  search_no_results: "No search results found: %s"
  loading_error: "Error loading mapping data: %s"
mapping:
  search_requires_query: "Search query is required"
  show_requires_command: "Command name is required"
  unknown_command: "Unknown mapping command"
  
context:
  container_not_found: "Container not found: %s"
  container_set: "Current container set: %s"
  container_cleared: "Current container cleared"
  no_container_set: "No current container set"
  
history:
  no_history: "No history available"
  search_no_results: "No search results found: %s"
  cleared: "History cleared"
  
completion:
  no_suggestions: "No suggestions available"
  loading_error: "Error loading completion data: %s"
  entry_directory: "Directory"
  entry_file: "File"
  alias_value: "Alias: %s"
  descriptions:
    cd: "Login to container"
    pwd: "Print current directory"
    ls: "List Docker images"
    cat: "Show file content"
    cp: "Copy file"
    mv: "Move file"
    mkdir: "Create directory"
    rmdir: "Remove directory"
    touch: "Create file"
    echo: "Print string"
    clear: "Clear screen"
    exit: "Exit shell"
    ps: "List containers (docker ps)"
    kill: "Stop container (docker stop)"
    rm: "Remove Docker container"
    rmi: "Remove Docker image"
    start: "Start Docker container"
    stop: "Stop Docker container"
    exec: "Execute command in container"
    pull: "Pull Docker image"
    tail: "Show logs (docker logs)"
    head: "Show first logs (docker logs --tail)"
    grep: "Search logs (docker logs | grep)"
    vi: "Edit file (docker exec vi)"
    nano: "Edit file (docker exec nano)"
    find: "Search files (docker exec find)"
    locate: "Search files (docker exec find)"
    netstat: "Show ports (docker port)"
    free: "Memory usage (docker stats)"
    top: "Realtime stats (docker stats)"
    htop: "Realtime stats (docker stats)"
    df: "Disk usage (docker system df)"
    du: "Detailed disk usage (docker system df)"
    uname: "System info (docker version)"
    docker: "Manage Docker containers"
    theme: "Change theme"
    lang: "Change language"
    alias: "Manage aliases"
    config: "Show configuration"
  docker_subcommands:
    ps: "Show running containers"
    images: "List images"
    run: "Run a new container"
    exec: "Execute command in running container"
    start: "Start stopped container"
    stop: "Stop running container"
    restart: "Restart container"
    rm: "Remove container"
    rmi: "Remove image"
    pull: "Download image"
    push: "Upload image"
    build: "Build Docker image"
    logs: "Show container logs"
    inspect: "Show detailed information"
    network: "Manage networks"
    volume: "Manage volumes"
    system: "Show system info"
    version: "Show version"
  docker_network_subcommands:
    ls: "List networks"
    create: "Create network"
    rm: "Remove network"
    inspect: "Show network details"
  docker_volume_subcommands:
    ls: "List volumes"
    create: "Create volume"
    rm: "Remove volume"
    inspect: "Show volume details"
  
docker:
  pull_image: "Pulling image: %s"
  pull_success: "Successfully pulled image: %s"
  pull_failed: "Failed to pull image '%s': %v"
  start_container: "Starting container: %s"
  start_success: "Successfully started container: %s"
  start_failed: "Failed to start container '%s': %v"
  start_already_running: "Container '%s' is already running"
  exec_command: "Executing in container %s: %s"
  exec_failed: "Failed to execute command in container '%s': %v"
  stop_container: "Stopping container: %s"
  stop_success: "Successfully stopped container: %s"
  stop_failed: "Failed to stop container '%s': %v"
  stop_not_running: "Container '%s' is not running"
  remove_container: "Removing container: %s"
  remove_success: "Successfully removed container: %s"
  remove_failed: "Failed to remove container '%s': %v"
  remove_running_container: "Container '%s' is running. Stop it first or use --force"
  remove_image: "Removing image: %s"
  remove_image_success: "Successfully removed image: %s"
  remove_image_failed: "Failed to remove image '%s': %v"
  image_not_found: "Image '%s' not found"
  container_not_found: "Container '%s' not found"
  not_available: "Docker is not available"
  image_name_required: "Image name is required"
  container_name_required: "Container name is required"
  command_required: "Command is required"
  error_checking_container: "Error checking container: %v"
  error_checking_container_status: "Error checking container status: %v"
  error_checking_image: "Error checking image: %v"