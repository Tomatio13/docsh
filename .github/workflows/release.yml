name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.2'

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release directory
        run: mkdir -p Release

      - name: Build Windows 64bit
        run: |
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o Release/docsh-windows-x64.exe .
          cd Release
          zip docsh-${{ steps.get_version.outputs.VERSION }}-windows-x64.zip docsh-windows-x64.exe
          cd ..

      - name: Build Linux 64bit
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o Release/docsh-linux-x64 .
          cd Release
          tar -czf docsh-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz docsh-linux-x64
          cd ..

      - name: Build macOS Intel
        run: |
          GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -o Release/docsh-macos-x64 .
          cd Release
          tar -czf docsh-${{ steps.get_version.outputs.VERSION }}-macos-x64.tar.gz docsh-macos-x64
          cd ..

      - name: Build macOS ARM64
        run: |
          GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags="-s -w" -o Release/docsh-macos-arm64 .
          cd Release
          tar -czf docsh-${{ steps.get_version.outputs.VERSION }}-macos-arm64.tar.gz docsh-macos-arm64
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            Release/docsh-${{ steps.get_version.outputs.VERSION }}-windows-x64.zip
            Release/docsh-${{ steps.get_version.outputs.VERSION }}-linux-x64.tar.gz
            Release/docsh-${{ steps.get_version.outputs.VERSION }}-macos-x64.tar.gz
            Release/docsh-${{ steps.get_version.outputs.VERSION }}-macos-arm64.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 